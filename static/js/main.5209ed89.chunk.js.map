{"version":3,"sources":["utils.js","components/Loader.js","components/Apod.js","components/Error.js","constants.js","components/Calendar.js","pages/MainPage.js","components/ApodPreview.js","components/ApodsList.js","components/ModalView.js","components/ExpanedApod.js","components/MonthPicker.js","components/YearPicker.js","components/DatePicker.js","pages/Catalog.js","App.js","index.js"],"names":["createISODate","year","month","day","formatDate","date","getFullYear","getMonth","getDate","getDatesRange","dates","today","Date","isCurrentMonth","push","fetchApod","fetch","process","then","response","ok","json","error","e","Error","msg","data","Loader","className","Apod","imgUrl","title","description","hidden","onLoad","clsx","src","alt","ErrorMsg","message","monthNames","minDate","Calendar","onChange","name","type","value","target","max","min","MainPage","useState","window","localStorage","getItem","setDate","apod","setApod","loading","setLoading","imgLoading","setImgLoading","setError","useEffect","setItem","media_type","catch","finally","exact","to","url","explanation","ApodPreview","onClick","ApodList","apods","map","c","key","ModalView","onDismiss","children","ExpanedApod","status","alert","hdurl","MonthPicker","onSelect","disableMonths","indexOf","disabled","YearPicker","thisYear","disableYear","years","i","getYearsRange","DatePicker","onMonthChange","onYearChange","setDisableMonths","setDisableYear","Catalog","setApods","setMonth","setYear","pickedDate","setPickedDate","show","setShow","list","match","console","log","Promise","all","filter","x","App","basename","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5209ed89.chunk.js","sourcesContent":["const createISODate = (year, month, day) =>  year + '-' + month + '-' + day\nconst isCurrentMonth = (month, year) => {\n    const today = new Date()\n    return month === today.getMonth() + 1 && year === today.getFullYear()\n}\n\nexport const formatDate = date => {\n    let year = date.getFullYear()\n    let month = date.getMonth() + 1\n    month = month < 10 ? '0' + month : month\n    let day = date.getDate()\n    day = day < 10 ? '0' + day : day\n\n    return createISODate(year, month, day)\n}\n\nexport const isImage = url => {\n    return url.match(/\\.(gif|jpe?g|png)$/)\n}\n\nexport const getDatesRange = (month, year) =>{\n    const dates = []\n    let lastDay = isCurrentMonth(month, year) ? new Date().getDate() : new Date(year, month, 0).getDate()\n    for(let day = lastDay; day > 0; day--){\n        dates.push(createISODate(year, month, day))\n    }\n    return dates\n}\n\nexport const getYearsRange = (min, max) => {\n    const years = []\n    for(let i = min; i <= max; i++){\n        years.push(i)\n    }\n    return years\n}\n\nexport const fetchApod = (date) => {\n    return fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${date}`)\n            .then(response => {\n                if(response.ok){\n                    return response.json()\n                }\n                return response.json().then( error => {\n                    const e = new Error( error.msg || \"Somthing went wrong\")\n                    e.data = error\n                    throw e\n                })\n            })\n}","import React from 'react'\nconst Loader = () => {\n    return(\n        <div className=\"loader\">\n                <div className=\"animation-container\">\n                <div className=\"animation-group\">\n                    <span className=\"loader-component\"></span>\n                    <span className=\"loader-component\"></span>\n                    <span className=\"loader-component\"></span>\n                    <span className=\"loader-component\"></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react'\nimport clsx from 'clsx'\n\nconst Apod = ({imgUrl, title, description, hidden, onLoad}) => {\n    return(\n            <div className={clsx(\"apod-container\", {\"hidden\": hidden})}>\n                <header>\n                    <h2 className=\"title\">{title}</h2>  \n                </header>\n                <div className=\"picture-container\">\n                    <img \n                        src={imgUrl} \n                        alt={title} \n                        className=\"picture\" \n                        onLoad={onLoad}\n                        />\n                    <div className=\"description-container\">\n                        <p>\n                            {description}\n                        </p>\n                    </div>\n                </div>         \n            </div>\n    )  \n}\n\nexport default Apod","import React from 'react'\nconst ErrorMsg = ({message}) => {\n    return(\n    <div className=\"error\">\n        <span >{message}</span>\n    </div>)\n}\n\nexport default ErrorMsg","export const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\nexport const minDate = {year: \"1995\", month: \"6\", day: \"16\"}\n","import React from 'react'\nimport { formatDate } from '../utils'\nimport { minDate } from '../constants'\n\nconst Calendar = ({date, onChange}) => {\n    const handleChange = e => onChange(e.target.value)\n    \n    return(    \n        <div className=\"picker-container\">\n            <input \n                name=\"picker\" \n                className=\"picker date-picker\"\n                type=\"date\" \n                value={date} \n                onChange={handleChange} \n                max={formatDate(new Date())} \n                min={formatDate(new Date(minDate.year, minDate.month, minDate.day))}\n                />\n        </div>\n        \n    )\n}\n\nexport default Calendar","import React, { useState, useEffect } from 'react'\nimport { formatDate, fetchApod } from '../utils';\nimport Loader from '../components/Loader';\nimport Apod from '../components/Apod';\nimport ErrorMsg from '../components/Error';\nimport { NavLink } from 'react-router-dom';\nimport Calendar from '../components/Calendar';\n\n\nconst MainPage = () => {\n  const initialDate = () => window.localStorage.getItem(\"date\") || formatDate(new Date());\n\n  const [date, setDate] = useState(initialDate)\n  const [apod, setApod] = useState(null)\n\n  const [loading, setLoading] = useState(true)\n  const [imgLoading, setImgLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => window.localStorage.setItem(\"date\", date), [date]);\n  \n  useEffect(() => {\n    setLoading(true)\n    setImgLoading(true)\n    setError(null)\n\n    fetchApod(date)\n        .then((data) => {\n            if(data.media_type !== \"image\"){\n                throw new Error(\"Oops. The day has no image.\")\n            }\n            setApod(data)\n        })\n        .catch((e) => {\n            setError(e)\n            setImgLoading(false)\n        })\n        .finally(() => setLoading(false))\n    }, [date])\n\n  return (\n    <>\n        <header className=\"header\">\n            <h1 className=\"title\">Astronomy Picture of the Day</h1>\n            <NavLink className=\"nav-link\" exact to='/catalog'>Go to catalog</NavLink>\n        </header>\n        <Calendar date={date} onChange={setDate}/>\n        <section className=\"content-section\">\n            {imgLoading && <Loader/>}\n            {!loading && !error && \n                <Apod \n                    imgUrl={apod.url} \n                    title={apod.title} \n                    description={apod.explanation} \n                    hidden={imgLoading}\n                    onLoad={() => setImgLoading(false)}/> }\n            {error && <ErrorMsg message={error.message}/>}\n        </section>\n    </>)\n}\n\nexport default MainPage\n","import React, { useState } from 'react'\nimport Loader from './Loader'\nimport clsx from 'clsx'\n\nexport const ApodPreview = ({imgUrl, date, title, onClick}) => {\n    const [loading, setLoading] = useState(true)\n    return(\n        <div className=\"preview\" onClick={onClick}>\n                {loading && <Loader/>}\n                <img \n                    className={clsx(\"preview-img\", {\"hidden\": loading})} \n                    src={imgUrl} \n                    alt={title} \n                    onLoad={() => setLoading(false)}\n                    />\n                <span className=\"preview-title\">{title}</span>\n                <span className=\"preview-date\">{date}</span>    \n        </div>\n    )\n}","import React from 'react'\nimport { ApodPreview } from './ApodPreview'\n\nexport const ApodList= ({apods, onClick}) => {\n    return(\n        <div className=\"apods-list\">\n            {apods.map(c => \n            <ApodPreview \n                imgUrl={c.url} \n                title={c.title} \n                date={c.date} \n                key={c.date} \n                onClick={() => onClick(c.date)}\n            />)}\n        </div>\n    )\n}","import React from 'react'\n\nconst ModalView = ({onDismiss, children}) => {\n    return(\n        <div className=\"window\" onClick={onDismiss}>\n                    {children}\n        </div>\n    )\n}\n\nexport default ModalView","import React, { useState, useEffect } from 'react'\nimport ModalView from './ModalView'\nimport clsx from 'clsx'\nimport Loader from './Loader'\n\nconst ExpanedApod = ({date, onDismiss}) => {\n    const [apod, setApod] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${date}&hd=true`)\n            .then(response => {\n                if(response.status === 200){\n                    return response.json()\n                }else{\n                    throw Error()\n                }\n            })\n            .then(setApod)\n            .catch(() => alert(\"Something went wrong. Try to pick another date.\"))\n        },[date])\n\n    return(\n        <ModalView onDismiss={onDismiss}>\n            {loading && <Loader/>}\n            {apod && <img \n\n                    src={apod.hdurl} \n                    alt={apod.title} \n                    className={clsx(\"modal-image\", {\"hidden\" : loading}, {\"appearing\": !loading})}\n                    onLoad={() => setLoading(false)}\n                    />\n                }\n        </ModalView>\n    )\n}\n\nexport default ExpanedApod","import React from 'react'\nimport { monthNames } from '../constants'\n\nconst MonthPicker = ({value, onSelect, disableMonths}) => {\n    \n    return(\n        <select value={value} onChange={e => onSelect(+e.target.value)} className=\"picker\">\n            {monthNames.map(\n                name => <option \n                            value={monthNames.indexOf(name) + 1} \n                            key={name}\n                            disabled={disableMonths && monthNames.indexOf(name) > new Date().getMonth()}\n                            >{name}\n                        </option>)}\n        </select>\n    )  \n}\n\nexport default MonthPicker","import React from 'react'\nimport { getYearsRange } from '../utils'\nimport { minDate } from '../constants'\n\nconst YearPicker = ({value, onSelect, thisYear, disableYear}) => {\n    const years = getYearsRange(minDate.year, thisYear)\n    return(\n        <select value={value} onChange={e => onSelect(+e.target.value)} className=\"picker\">\n            {years.map(i => <option value={i} key={i} disabled={disableYear && i === thisYear}>{i}</option>)}\n        </select>\n    )   \n}\n\nexport default YearPicker","import React, { useEffect, useState } from 'react'\nimport MonthPicker from './MonthPicker'\nimport YearPicker from './YearPicker'\n\nconst DatePicker = ({month, year, onMonthChange, onYearChange}) => {\n    const [disableMonths, setDisableMonths] = useState(false)\n    const [disableYear, setDisableYear] = useState(false)\n\n    useEffect(() => {\n        const today = new Date()\n        if(year === today.getFullYear()){\n            setDisableMonths(true)\n        }\n        else{\n            setDisableMonths(false)\n        }\n\n        if(month > today.getMonth() + 1){\n            setDisableYear(true)\n        }\n        else{\n            setDisableYear(false)\n        }\n\n    }, [month, year])\n\n    return(    \n        <div className=\"picker-container\">\n            <MonthPicker value={month} onSelect={onMonthChange} disableMonths={disableMonths}/>\n            <YearPicker value={year} onSelect={onYearChange} disableYear={disableYear} thisYear={new Date().getFullYear()}/>\n        </div>\n        \n    )\n}\n\nexport default DatePicker","import React, { useState, useEffect } from 'react'\nimport { ApodList } from '../components/ApodsList';\nimport Loader from '../components/Loader';\nimport { getDatesRange, isImage, fetchApod } from '../utils';\nimport ExpanedApod from '../components/ExpanedApod';\nimport { NavLink } from 'react-router-dom';\nimport DatePicker from '../components/DatePicker';\n\n\nconst Catalog = () => {\n    const initMonth = () => +window.localStorage.getItem(\"month\") || new Date().getMonth() + 1;\n    const initYear = () => +window.localStorage.getItem(\"year\") || new Date().getFullYear();\n\n    const [apods, setApods] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const [month, setMonth] = useState(initMonth)\n    const [year, setYear] = useState(initYear)\n    \n\n    const [pickedDate, setPickedDate] = useState(null)\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n        window.localStorage.setItem(\"month\", month)\n        window.localStorage.setItem(\"year\", year)\n    }, [month, year]);\n\n    useEffect(() => {\n        const dates = getDatesRange(month, year)\n        const list = []\n\n        for(let date of dates){\n            list.push(fetchApod(date).then(apod => {\n                if (isImage(apod.url)) {\n                    return apod\n                }\n                return null\n            }).catch(e => console.log(e)))\n        }\n        Promise.all(list).then(data => setApods(data.filter(x => !!x))).then(() => setLoading(false))\n        \n    }, [month, year])\n\n    const handleClick = date => {\n        setPickedDate(date)\n        setShow(true)\n    }\n\n  return (\n      <>\n        <header className=\"header\">\n            <h1 className=\"title\">APoD catalog</h1>\n            <NavLink className=\"nav-link\" exact to='/'>Return to apod</NavLink>\n        </header>\n        <DatePicker month={month} year={year} onMonthChange={setMonth} onYearChange={setYear}/>\n        <section className=\"content-section\">\n        {loading? <Loader/> : <ApodList apods={apods} onClick={handleClick}/>}\n        </section>\n        {show && <ExpanedApod date={pickedDate} onDismiss={() => setShow(false)}/>}\n      </>\n  );\n}\n\nexport default Catalog\n","import React from 'react'\nimport MainPage from './pages/MainPage';\nimport { Switch, Route,  HashRouter as Router } from 'react-router-dom';\nimport Catalog from './pages/Catalog';\n\n\nconst App = () => {\n  return (\n    <Router basename='/'>\n      <div className=\"container\">\n            <Switch>\n                <Route path='/catalog' component={Catalog}/>\n                <Route exact path='/' component={MainPage}/>\n            </Switch>\n        </div>\n      </Router>\n    \n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}