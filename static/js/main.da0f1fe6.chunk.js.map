{"version":3,"sources":["components/DatePicker.js","utils.js","components/Loader.js","components/Apod.js","pages/MainPage.js","components/Navbar.js","components/ApodPreview.js","components/ApodsList.js","components/ModalView.js","components/ExpanedApod.js","pages/Catalog.js","App.js","index.js"],"names":["DatePicker","date","onChange","className","htmlFor","name","type","value","e","target","formatDate","year","getFullYear","month","getMonth","day","getDate","isImage","url","match","Loader","Apod","imgUrl","title","description","src","alt","MainPage","useState","window","localStorage","getItem","Date","setDate","apod","setApod","loading","setLoading","error","setError","useEffect","setItem","fetch","process","then","response","status","json","Error","data","catch","explanation","message","Navbar","activeClassName","exact","to","ApodPreview","onClick","ApodList","apods","map","c","key","ModalView","onDismiss","children","ExpanedApod","alert","hdurl","Catalog","setApods","pickedDate","setPickedDate","show","setShow","today","dates","i","push","console","log","getDatesRange","a","Promise","all","filter","x","App","basename","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da0f1fe6.chunk.js","sourcesContent":["import React from 'react'\n\nexport const DatePicker = ({date, onChange}) => {\n    const handleChange = e => onChange(e.target.value)\n    return(\n        \n        <div className=\"date-picker\">\n            <label htmlFor=\"picker\">Let's pick a date</label>\n            <input name=\"picker\" type=\"date\" value={date} onChange={handleChange} />\n        </div>\n        \n    )\n}","export const formatDate = date => {\n    let year = date.getFullYear()\n    let month = date.getMonth() + 1\n    month = month < 10 ? '0' + month : month\n    let day = date.getDate()\n    day = day < 10 ? '0' + day : day\n\n    return year + '-' + month + '-' + day\n}\n\nexport const fetchApod = (date, callback) => {\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${date}`).then(\n                response =>  response.json()\n            )\n            .then(apod => {\n                if(apod.url.match(/\\.(gif|jpe?g|png)$/)){\n                    callback(apod)\n                }\n                else{\n                    throw Error(\"No image\")\n                }\n            })\n}\nexport const isImage = url => {\n    return url.match(/\\.(gif|jpe?g|png)$/)\n}\nexport const getDatesRange = () =>{\n    const today = new Date()\n    const dates = []\n    for(let i = 0; i < 30; i++){\n        let day = new Date()\n        day.setDate(today.getDate() - i)\n        dates.push(day)\n    }\n    console.log( dates)\n    return dates.map(date => formatDate(date))\n}","import React from 'react'\nconst Loader = () => {\n    return(\n        <div className=\"loader\">\n                <div className=\"animation-container\">\n                <div className=\"animation-group\">\n                    <span className=\"loader-component\"></span>\n                    <span className=\"loader-component\"></span>\n                    <span className=\"loader-component\"></span>\n                    <span className=\"loader-component\"></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react'\n\nconst Apod = ({imgUrl, title, description}) => {\n\n    return(\n    <div className=\"apod-container\">\n\n        <header>\n            <h2 className=\"title\">{title}</h2>  \n        </header>\n        <div className=\"picture-container\">\n            <img \n                src={imgUrl} \n                alt={title} \n                className=\"picture\"\n                />\n            <div className=\"description-container\">\n                <p>\n                    {description}\n                </p>\n            </div>\n        </div> \n            \n    </div>\n    )  \n}\n\nexport default Apod","import React, { useState, useEffect } from 'react'\nimport { DatePicker } from '../components/DatePicker'\nimport { formatDate, isImage } from '../utils';\nimport Loader from '../components/Loader';\nimport Apod from '../components/Apod';\n\n\nconst MainPage = () => {\n  const initialDate = () => window.localStorage.getItem(\"date\") || formatDate(new Date());\n\n  const [date, setDate] = useState(initialDate)\n  const [apod, setApod] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => window.localStorage.setItem(\"date\", date), [date]);\n  \n  useEffect(() => {\n    setLoading(true)\n    setError(null)\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${date}`)\n        .then(response => {\n            if(response.status === 200){\n                return response.json()\n            }else{\n                throw new Error(\"Something went wrong. Try to pick another date.\")\n            }\n        })\n        .then((data) => {\n            if(!isImage(data.url)){\n                throw new Error(\"The day has no image. Please, pick another day.\")\n            }\n            setApod(data)\n        })\n        .then(() => setLoading(false))\n        .catch(setError)\n    \n}, [date])\n\n  return (\n    <section className=\"main-section\">\n        <header className=\"section-header\">\n            <h1 className=\"section-title\">Astronomy Picture of the Day</h1>\n        </header>\n        <DatePicker date={date} onChange={setDate}/>\n        {loading ? <Loader/>:<Apod imgUrl={apod.url} title={apod.title} description={apod.explanation}/> }\n        {error && <div className=\"error\">{error.message}</div>}\n    </section>)\n}\n\nexport default MainPage\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n\nconst Navbar = () => {\n    return (\n        <header className=\"header\">\n            <h1>APoD</h1>\n            <nav className=\"navbar\">\n                <NavLink className=\"nav-link\" activeClassName=\"active-link\" exact to='/' >Home</NavLink>\n                <NavLink className=\"nav-link\" activeClassName=\"active-link\" to='/catalog'>Catalog</NavLink>              \n            </nav>\n        </header>\n    )\n\n}\nexport default Navbar;","import React from 'react'\n\nexport const ApodPreview = ({imgUrl, date, title, onClick}) => {\n    return(\n        <div className=\"preview\" onClick={onClick}>\n                <img className=\"preview-img\" src={imgUrl} alt={title}/>\n                <span className=\"preview-title\">{title}</span>\n                <span className=\"preview-date\">{date}</span>\n        </div>\n    )\n}","import React from 'react'\nimport { ApodPreview } from './ApodPreview'\n\nexport const ApodList= ({apods, onClick}) => {\n    return(\n        <div className=\"apods-list\">\n            {apods.map(c => \n            <ApodPreview \n                imgUrl={c.url} \n                title={c.title} \n                date={c.date} \n                key={c.date} \n                onClick={() => onClick(c.date)}\n            />)}\n        </div>\n    )\n}","import React from 'react'\n\nconst ModalView = ({onDismiss, children}) => {\n    return(\n        <div className=\"window\" onClick={onDismiss}>\n                    {children}\n        </div>\n    )\n}\n\nexport default ModalView","import React, { useState, useEffect } from 'react'\nimport ModalView from './ModalView'\n\nconst ExpanedApod = ({date, onDismiss}) => {\n    const [apod, setApod] = useState(null)\n\n    useEffect(() => {\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${date}&hd=true`)\n            .then(response => {\n                if(response.status === 200){\n                    return response.json()\n                }else{\n                    throw Error()\n                }\n            })\n            .then(setApod)\n            .catch(() => alert(\"Something went wrong. Try to pick another date.\"))\n        },[date])\n\n    return(\n        <ModalView onDismiss={onDismiss}>\n            {apod && <img \n                    src={apod.hdurl} \n                    alt={apod.title} \n                    className=\"modal-image\"\n                    />\n                }\n        </ModalView>\n    )\n}\n\nexport default ExpanedApod","import React, { useState, useEffect } from 'react'\nimport { ApodList } from '../components/ApodsList';\nimport Loader from '../components/Loader';\nimport { getDatesRange, isImage } from '../utils';\nimport ExpanedApod from '../components/ExpanedApod';\n\n\nconst Catalog = () => {\n    const [apods, setApods] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n\n    const [pickedDate, setPickedDate] = useState('2020-10-12')\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n        const dates = getDatesRange()\n        const data = dates.map(async date => {\n            const response = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${date}`);\n            if(response.status !== 200){\n                return null\n            }\n            const apod = await response.json();\n            if (!isImage(apod.url)) {\n                return null\n            }\n            return apod\n        })\n        Promise.all(data).then(data => setApods(data.filter(x => !!x))).then(() => setLoading(false))\n    }, [])\n\n    const handleClick = date => {\n        setPickedDate(date)\n        setShow(true)\n    }\n\n  return (\n      <section className=\"main-section\">\n          <header className=\"section-header\">\n              <h1 className=\"section-title\">APODs from the last 30 days</h1>\n              <span className=\"section-details\">* Click to expand HD *</span>\n          </header>\n        {loading? <Loader/> : <ApodList apods={apods} onClick={handleClick}/>}\n        {show && <ExpanedApod date={pickedDate} onDismiss={() => setShow(false)}/>}\n      </section>\n  );\n}\n\nexport default Catalog\n","import React from 'react'\nimport MainPage from './pages/MainPage';\nimport Navbar from './components/Navbar';\nimport { Switch, Route,  HashRouter as Router } from 'react-router-dom';\nimport Catalog from './pages/Catalog';\n\n\nconst App = () => {\n  return (\n    <Router basename='/'>\n      <div className=\"container\">\n            <Navbar/>\n              <Switch>\n                  <Route path='/catalog' component={Catalog}/>\n                  <Route exact path='/' component={MainPage}/>\n              </Switch>\n        </div>\n      </Router>\n    \n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}